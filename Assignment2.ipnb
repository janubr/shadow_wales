{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Assignment2",
      "provenance": [],
      "authorship_tag": "ABX9TyPX+e6WelfX7XxssZgY2pn5",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/janubr/shadow_wales/blob/main/Assignment2.ipnb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "blMWuKbQpEuB"
      },
      "source": [
        "### For and while(break and cotinue statement)"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YB0WSB4Zdeql",
        "outputId": "6d33732b-2539-486b-aabb-02f4b530c236"
      },
      "source": [
        "number = 0 \n",
        "\n",
        "for number in range(10):\n",
        "    if number == 5:\n",
        "       break\n",
        "\n",
        "    print('Number is ' + str(number))\n",
        "\n",
        "print('out of loop')\n",
        "\n",
        "number = 0\n",
        "\n",
        "for number in range(10):\n",
        "    if number == 5:\n",
        "      continue\n",
        "\n",
        "    print('Number is ' + str(number))\n",
        "\n",
        "print('out of loop')      "
      ],
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Number is 0\n",
            "Number is 1\n",
            "Number is 2\n",
            "Number is 3\n",
            "Number is 4\n",
            "out of loop\n",
            "Number is 0\n",
            "Number is 1\n",
            "Number is 2\n",
            "Number is 3\n",
            "Number is 4\n",
            "Number is 6\n",
            "Number is 7\n",
            "Number is 8\n",
            "Number is 9\n",
            "out of loop\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AsNnKme4lJ59",
        "outputId": "8845a3d1-0320-4762-9875-51d09e3d00ef"
      },
      "source": [
        "var = 20\n",
        "while var > 0:\n",
        "   print('Current variable value :', var)\n",
        "   var= var -1\n",
        "   if var == 5:\n",
        "      break\n",
        "  \n",
        "print(\"bye!\")  \n",
        "\n",
        "var = 20\n",
        "while var > 0:\n",
        "  var = var-1\n",
        "  if var == 5:\n",
        "    continue\n",
        "  print('current variable value :', var)\n",
        "print(\"bye!\")"
      ],
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Current variable value : 20\n",
            "Current variable value : 19\n",
            "Current variable value : 18\n",
            "Current variable value : 17\n",
            "Current variable value : 16\n",
            "Current variable value : 15\n",
            "Current variable value : 14\n",
            "Current variable value : 13\n",
            "Current variable value : 12\n",
            "Current variable value : 11\n",
            "Current variable value : 10\n",
            "Current variable value : 9\n",
            "Current variable value : 8\n",
            "Current variable value : 7\n",
            "Current variable value : 6\n",
            "bye!\n",
            "current variable value : 19\n",
            "current variable value : 18\n",
            "current variable value : 17\n",
            "current variable value : 16\n",
            "current variable value : 15\n",
            "current variable value : 14\n",
            "current variable value : 13\n",
            "current variable value : 12\n",
            "current variable value : 11\n",
            "current variable value : 10\n",
            "current variable value : 9\n",
            "current variable value : 8\n",
            "current variable value : 7\n",
            "current variable value : 6\n",
            "current variable value : 4\n",
            "current variable value : 3\n",
            "current variable value : 2\n",
            "current variable value : 1\n",
            "current variable value : 0\n",
            "bye!\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9Ia2yFS5Kdjj"
      },
      "source": [
        "### star pyramid program"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7qmDQ2UtVGAo",
        "outputId": "00004cc2-f39a-454d-8c2f-f107668a573a"
      },
      "source": [
        "n=int(input(\"enter thenumber of rows:\"))\n",
        "for i in range(n): \n",
        "   print(\" \"*(n-i-1),end = \" \")\n",
        "   print(\"* \"*(i+1)) "
      ],
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "enter thenumber of rows:4\n",
            "    * \n",
            "   * * \n",
            "  * * * \n",
            " * * * * \n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "JGbRpoK-KQP2"
      },
      "source": [
        "### [Copy]"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UYqUQd4s8gu8",
        "outputId": "a0b1a0dd-7b18-46a5-c355-6571ba92e568"
      },
      "source": [
        "phone={\n",
        "    \"brand\":\"one plus\",\n",
        "    \"model\":\"nord\",\n",
        "    \"year\":\"2020\"\n",
        "    }\n",
        "X =phone.copy()\n",
        "print(X)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "{'brand': 'one plus', 'model': 'nord', 'year': '2020'}\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Vv30Sr_5-AvW"
      },
      "source": [
        "### [Fromkeys]"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BtcNMNoR-J4w",
        "outputId": "c83c0318-4b74-46c5-eb92-2d1e5e9e8bf9"
      },
      "source": [
        "x=('key1','key2','key3')\n",
        "y=14\n",
        "thisdict=dict.fromkeys(x,y)\n",
        "print(thisdict)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "{'key1': 14, 'key2': 14, 'key3': 14}\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2QybWqZs-2oB"
      },
      "source": [
        "### [Get]"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BeV2YeF4-769",
        "outputId": "1a412ae3-cd0e-4d5f-f536-30084e118768"
      },
      "source": [
        "phone={\n",
        "    \"brand\":\"oneplus\",\n",
        "    \"model\":\"nord\",\n",
        "    \"year\":\"2020\"\n",
        "}  \n",
        "Y=phone.get(\"year\")\n",
        "print(Y)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "2020\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4zbiYZmM_mgw"
      },
      "source": [
        "### [Items]"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sG2YF7dHAuy3",
        "outputId": "667556f8-a878-4a2b-aae4-f4a0bdce42cc"
      },
      "source": [
        "phone={\n",
        "    \"brand\":\"one plus\",\n",
        "    \"model\":\"nord\",\n",
        "    \"year\":\"2020\"\n",
        "}\n",
        "Z= phone.items()\n",
        "print(Z)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "dict_items([('brand', 'one plus'), ('model', 'nord'), ('year', '2020')])\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "HtqVsnD-EkcK"
      },
      "source": [
        "[Keys]"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "F7YVCoy1En9X",
        "outputId": "972b7e4b-b9c2-4f58-c832-ee1172733ab4"
      },
      "source": [
        "phone={\n",
        "    \"brand\":\"one plus\",\n",
        "    \"model\":\"nord\",\n",
        "    \"year\":\"2020\"\n",
        "    }\n",
        "X= phone.keys()\n",
        "print(X)    "
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "dict_keys(['brand', 'model', 'year'])\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kmKVx_YsFNhe"
      },
      "source": [
        "### [Pop]"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pcTiyoWTFS0C",
        "outputId": "bffe2642-d764-4de3-c6b6-2f419965b267"
      },
      "source": [
        "phone={\n",
        "    \"brand\":\"one plus\",\n",
        "    \"model\":\"nord\",\n",
        "    \"year\":\"2020\"\n",
        "}\n",
        "phone.pop(\"brand\")\n",
        "print(phone)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "{'model': 'nord', 'year': '2020'}\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "48wXxMQpFxOL"
      },
      "source": [
        "## [Popitem]"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GTul1-8zF314",
        "outputId": "b69b15a4-bba3-4d3b-d347-2211f152d94e"
      },
      "source": [
        "phone={\n",
        "    \"brand\":\"one plus\",\n",
        "    \"model\":\"nord\",\n",
        "    \"year\":\"2020\"\n",
        "}\n",
        "phone.popitem()\n",
        "print(phone)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "{'brand': 'one plus', 'model': 'nord'}\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "IH68Kjw3GUYD"
      },
      "source": [
        "### [Setdefault]"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "68ggDIT7Gf8z",
        "outputId": "57428caa-da85-4b84-a98a-d4027947372f"
      },
      "source": [
        "phone={\n",
        "    \"brand\":\"one plus\",\n",
        "    \"model\":\"nord\",\n",
        "    \"year\":\"2020\"\n",
        "}\n",
        "X=phone.setdefault(\"model\",\"samsung\")\n",
        "print(X)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "nord\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "E4V3gOb3G9Ze"
      },
      "source": [
        "### [Update]"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "q7WAMEibHGNW",
        "outputId": "6207f44e-e103-4f63-bafc-917e3fce76db"
      },
      "source": [
        "phone={\n",
        "    \"brand\":\"oneplus\",\n",
        "    \"model\":\"nord\",\n",
        "    \"year\":2020\n",
        "}\n",
        "phone.update({\"colour\":\"blue\"})\n",
        "print(phone)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "{'brand': 'oneplus', 'model': 'nord', 'year': 2020, 'colour': 'blue'}\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "a0FfLZK4Hi8-"
      },
      "source": [
        "## [Values]"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "T80mmP0SIkgg",
        "outputId": "770c0cfe-8189-45d6-b7bc-096a4eb45959"
      },
      "source": [
        "phone={\n",
        "    \"brand\":\"oneplus\",\n",
        "    \"model\":\"nord\",\n",
        "    \"year\":2020\n",
        "}\n",
        "Z=phone.values()\n",
        "print(Z)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "dict_values(['oneplus', 'nord', 2020])\n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}